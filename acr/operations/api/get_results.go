// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetResultsHandlerFunc turns a function with the right signature into a get results handler
type GetResultsHandlerFunc func(GetResultsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetResultsHandlerFunc) Handle(params GetResultsParams) middleware.Responder {
	return fn(params)
}

// GetResultsHandler interface for that can handle valid get results params
type GetResultsHandler interface {
	Handle(GetResultsParams) middleware.Responder
}

// NewGetResults creates a new http.Handler for the get results operation
func NewGetResults(ctx *middleware.Context, handler GetResultsHandler) *GetResults {
	return &GetResults{Context: ctx, Handler: handler}
}

/*GetResults swagger:route GET /v1/results api getResults

Get ACRCloud Results

This is endpoint is useful for looking into and exporting the dataset.

*/
type GetResults struct {
	Context *middleware.Context
	Handler GetResultsHandler
}

func (o *GetResults) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetResultsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
